/* refer to precompiled/docs/mixins.md */

@mixin size($width: 5px, $height: 5px) {
  width:  $width;
  height: $height;
}
@mixin square($size: 5px) {
 @include size($size, $size);
}
@mixin placeholder {
  &.placeholder                { @content }
  &::-webkit-input-placeholder { @content }
  &:-moz-placeholder           { @content }
  &::-moz-placeholder          { @content }
  &:-ms-input-placeholder      { @content }
  &:focus::-webkit-input-placeholder {
    transition: all 0.5s 0.1s ease; 
    text-indent: -50%;
    opacity: 0;
  }
}
@mixin radius($radius: 5px) {
  -webkit-border-radius: $radius;
  -moz-border-radius:    $radius;
  border-radius:         $radius;
}
@mixin radius-custom($topleft: 5px, $topright: 5px, $bottomright: 5px, $bottomleft: 5px) {
  -webkit-border-top-right-radius:    $topright;
  -webkit-border-bottom-right-radius: $bottomright;
  -webkit-border-bottom-left-radius:  $bottomleft;
  -webkit-border-top-left-radius:     $topleft;
  -moz-border-radius-topright:        $topright;
  -moz-border-radius-bottomright:     $bottomright;
  -moz-border-radius-bottomleft:      $bottomleft;
  -moz-border-radius-topleft:         $topleft;
  border-top-right-radius:            $topright;
  border-bottom-right-radius:         $bottomright;
  border-bottom-left-radius:          $bottomleft;
  border-top-left-radius:             $topleft;
  -moz-background-clip:               padding; 
  -webkit-background-clip:            padding-box; 
  background-clip:                    padding-box; 
}
@mixin shadow($shadow: 0 1px 3px rgba(0,0,0,.25), $object: box) {
  @if $object == text {
    -webkit-text-shadow:  $shadow;
    -moz-text-shadow:     $shadow;
    text-shadow:          $shadow;
  } 
  @else {
    -webkit-box-shadow:  $shadow;
    -moz-box-shadow:     $shadow;
    box-shadow:          $shadow;
  }
}
@mixin opacity($opacity: 40) {
  opacity:        $opacity / 100;
  filter:         "alpha(opacity=#{$opacity})";
  -khtml-opacity: $opacity / 100;
  -moz-opacity:   $opacity / 100;
}
@mixin transition($prop: all, $time: 300ms, $ease: ease-out) {
  -webkit-transition:  $prop $time $ease;
  -moz-transition:     $prop $time $ease;
  -ms-transition:      $prop $time $ease;
  -o-transition:       $prop $time $ease;
  transition:          $prop $time $ease;
}
@mixin rotate($rotate: 0) {
  -webkit-transform: rotate($rotate +deg);
  -moz-transform:    rotate($rotate +deg);
  -ms-transform:     rotate($rotate +deg);
  -o-transform:      rotate($rotate +deg);
  transform:         rotate($rotate +deg);
}
@mixin scale($scale: 1) {
  -webkit-transform: scale($scale);
  -moz-transform:    scale($scale);
  -ms-transform:     scale($scale);
  -o-transform:      scale($scale);
  transform:         scale($scale);
}
@mixin skew($skew: 0) {
  -webkit-transform: skew($skew +deg);
  -moz-transform:    skew($skew +deg);
  -ms-transform:     skew($skew +deg);
  -o-transform:      skew($skew +deg);
  transform:         skew($skew +deg);
}
@mixin translate($left: 0, $top: 0) {
  -webkit-transform: translate($left +px, $top +px);
  -moz-transform:    translate($left +px, $top +px);
  -ms-transform:     translate($left +px, $top +px);
  -o-transform:      translate($left +px, $top +px);
  transform:         translate($left +px, $top +px);
}
@mixin mq($point, $query1: min, $query2: width) {
  @media screen and (#{$query1}-#{$query2}: $point) {
    @content;
  }
}
@mixin orient($orientation: landscape) {
  @media (orientation : $orientation) {
    @content;  
  }
}