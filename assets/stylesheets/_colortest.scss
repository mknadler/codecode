@mixin colortest($function: light, $color: white) {
  @if $function == "light" {
    li:nth-of-type(1){
      background-color: color($color, l1);
    }
    li:nth-of-type(2){
      background-color: color($color, l2);
    }
    li:nth-of-type(3){
      background-color: color($color, l3);
    }
    li:nth-of-type(4){
      background-color: color($color, l4);
    }
  } 
  @else if $function == "dark" {
    li:nth-of-type(1){
      background-color:color($color, d1);
    }
    li:nth-of-type(2){
      background-color:color($color, d2);
    }
    li:nth-of-type(3){
      background-color:color($color, d3);
    }
    li:nth-of-type(4){
      background-color:color($color, d4);
    }
  }
  @else if $function == "complementary" {
    li:nth-of-type(1){
      background-color:complementary($color, 1);
    }
    li:nth-of-type(2){
      background-color:complementary($color, 2);
    }
    li:nth-of-type(3){
      background-color:complementary($color, 3);
    }
    li:nth-of-type(4){
      background-color:complementary($color, 4);
    }
  } 
  @else if $function == "triad" {
   li:nth-of-type(1){
    background-color: triad($color, 1);
  }
  li:nth-of-type(2){
    background-color: triad($color, 2);
  }
} 
@else if $function == "analogous" {
  li:nth-of-type(1){
    background-color:analogous($color,1);
  }
  li:nth-of-type(2){
    background-color:analogous($color,2);
  }
}
@else if $function == "split" {
  li:nth-of-type(1){
    background-color:split($color,1);
  }
  li:nth-of-type(2){
    background-color:split($color,2);
  }
}
}


.colortest { 
    @include grid(7, 10px); 
  ul {
    @include reset(all);
  li{
   heighT: 100px;
   font-family: $font-title;
   text-transform: uppercase;
   display: block;
   padding: 5px 10px;
   font-size: 20px;
 }
  }
  &:last-of-type {
    margin-bottom: 20px;
  }
&:first-of-type {
   .cell:first-of-type li {
  background-color: $color-bg;
}
.cell:nth-of-type(2) {
  @include colortest(light, $color-bg);
}
.cell:nth-of-type(3) {
  @include colortest(dark, $color-bg);
}
.cell:nth-of-type(4) {
  @include colortest(complementary, $color-bg);
}
.cell:nth-of-type(5) {
  @include colortest(triad, $color-bg);
}
.cell:nth-of-type(6) {
  @include colortest(analogous, $color-bg);
}
.cell:nth-of-type(7) {
  @include colortest(split, $color-bg);
}
}
&:nth-of-type(2) {
   .cell:first-of-type li {
  background-color: $color-primary;
}
.cell:nth-of-type(2) {
  @include colortest(light, $color-primary);
}
.cell:nth-of-type(3) {
  @include colortest(dark, $color-primary);
}
.cell:nth-of-type(4) {
  @include colortest(complementary, $color-primary);
}
.cell:nth-of-type(5) {
  @include colortest(triad, $color-primary);
}
.cell:nth-of-type(6) {
  @include colortest(analogous, $color-primary);
}
.cell:nth-of-type(7) {
  @include colortest(split, $color-primary);
}
}

&:nth-of-type(3) {
   .cell:first-of-type li {
  background-color: $color-secondary;
}
.cell:nth-of-type(2) {
  @include colortest(light, $color-secondary);
}
.cell:nth-of-type(3) {
  @include colortest(dark, $color-secondary);
}
.cell:nth-of-type(4) {
  @include colortest(complementary, $color-secondary);
}
.cell:nth-of-type(5) {
  @include colortest(triad, $color-secondary);
}
.cell:nth-of-type(6) {
  @include colortest(analogous, $color-secondary);
}
.cell:nth-of-type(7) {
  @include colortest(split, $color-secondary);
}
}

&:nth-of-type(4) {
   .cell:first-of-type li {
  background-color: $color-tertiary;
}
.cell:nth-of-type(2) {
  @include colortest(light, $color-tertiary);
}
.cell:nth-of-type(3) {
  @include colortest(dark, $color-tertiary);
}
.cell:nth-of-type(4) {
  @include colortest(complementary, $color-tertiary);
}
.cell:nth-of-type(5) {
  @include colortest(triad, $color-tertiary);
}
.cell:nth-of-type(6) {
  @include colortest(analogous, $color-tertiary);
}
.cell:nth-of-type(7) {
  @include colortest(split, $color-tertiary);
}
}

&:nth-of-type(5) {
   .cell:first-of-type li {
  background-color: $color-4;
}
.cell:nth-of-type(2) {
  @include colortest(light, $color-4);
}
.cell:nth-of-type(3) {
  @include colortest(dark, $color-4);
}
.cell:nth-of-type(4) {
  @include colortest(complementary, $color-4);
}
.cell:nth-of-type(5) {
  @include colortest(triad, $color-4);
}
.cell:nth-of-type(6) {
  @include colortest(analogous, $color-4);
}
.cell:nth-of-type(7) {
  @include colortest(split, $color-4);
}
}

&:nth-of-type(6) {
   .cell:first-of-type li {
  background-color: $color-5;
}
.cell:nth-of-type(2) {
  @include colortest(light, $color-5);
}
.cell:nth-of-type(3) {
  @include colortest(dark, $color-5);
}
.cell:nth-of-type(4) {
  @include colortest(complementary, $color-5);
}
.cell:nth-of-type(5) {
  @include colortest(triad, $color-5);
}
.cell:nth-of-type(6) {
  @include colortest(analogous, $color-5);
}
.cell:nth-of-type(7) {
  @include colortest(split, $color-5);
}
}
}





